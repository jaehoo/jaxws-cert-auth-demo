
package com.test.client;

import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HelloServiceImplService", targetNamespace = "http://service.test.com/"
//        , wsdlLocation = "https://localhost:8443/HelloServer?wsdl"
)
@HandlerChain(file = "client-handlers.xml")
public class HelloServiceImpl
    extends Service
{

    private final static URL HELLOSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException HELLOSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName HELLOSERVICEIMPLSERVICE_QNAME = new QName("http://service.test.com/", "HelloServiceImplService");

    static {
        WebServiceException e = null;

        // load from classpath
        URL url = HelloServiceImpl.class.getClassLoader().getResource("HelloServer_1.wsdl");

        // load from URL
//        try {
////            url = new URL("https://localhost:8443/HelloServer?wsdl");
//
//        } catch (MalformedURLException ex) {
//            e = new WebServiceException(ex);
//        }
        HELLOSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        HELLOSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public HelloServiceImpl() {
        super(__getWsdlLocation(), HELLOSERVICEIMPLSERVICE_QNAME);
    }

    public HelloServiceImpl(WebServiceFeature... features) {
        super(__getWsdlLocation(), HELLOSERVICEIMPLSERVICE_QNAME, features);
    }

    public HelloServiceImpl(URL wsdlLocation) {
        super(wsdlLocation, HELLOSERVICEIMPLSERVICE_QNAME);
    }

    public HelloServiceImpl(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HELLOSERVICEIMPLSERVICE_QNAME, features);
    }

    public HelloServiceImpl(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloServiceImpl(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceImplPort")
    public HelloService getHelloServiceImplPort() {
        return super.getPort(new QName("http://service.test.com/", "HelloServiceImplPort"), HelloService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceImplPort")
    public HelloService getHelloServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.test.com/", "HelloServiceImplPort"), HelloService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HELLOSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw HELLOSERVICEIMPLSERVICE_EXCEPTION;
        }
        return HELLOSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
